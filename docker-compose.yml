version: "3.8"

networks:
  cassandra_cluster: {}

services:
  cassandra-001:
    image: cassandra:4.1
    container_name: cassandra-001
    hostname: cassandra-001
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    ports:
      - "9042:9042"  # CQL port for apps
    environment: &environment    # Save env variables into "environment"
      CASSANDRA_SEEDS: "cassandra-001,cassandra-002"    # The first two nodes will be seeds
      CASSANDRA_CLUSTER_NAME: DataCluster
      CASSANDRA_DC: Local
      CASSANDRA_RACK: One
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128

  cassandra-002:
    image: cassandra:4.1
    container_name: cassandra-002
    hostname: cassandra-002
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    ports:
      - "9043:9042"  # CQL port for apps
    environment: *environment
    depends_on:
      cassandra-001:
        condition: service_healthy

  cassandra-003:
    image: cassandra:4.1
    container_name: cassandra-003
    hostname: cassandra-003
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    ports:
      - "9044:9042"  # CQL port for apps
    environment: *environment
    depends_on:
      cassandra-002:
        condition: service_healthy

  cassandra-004:
    image: cassandra:4.1
    container_name: cassandra-004
    hostname: cassandra-004
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    ports:
      - "9045:9042"  # CQL port for apps
    environment: *environment
    depends_on:
      cassandra-003:
        condition: service_healthy
