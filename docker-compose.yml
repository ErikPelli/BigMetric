version: "3.8"

networks:
  cassandra_cluster: {}
  kafka_cluster: {}

services:
  cassandra-001:
    image: cassandra:4.1
    container_name: cassandra-001
    hostname: cassandra-001
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: &cassandra_environment    # Save env variables into "environment"
      CASSANDRA_SEEDS: "cassandra-001,cassandra-002"    # The first two nodes will be seeds
      CASSANDRA_CLUSTER_NAME: DataCluster
      CASSANDRA_DC: Local
      CASSANDRA_RACK: One
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128

  cassandra-002:
    image: cassandra:4.1
    container_name: cassandra-002
    hostname: cassandra-002
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: *cassandra_environment
    depends_on:
      cassandra-001:
        condition: service_healthy

  cassandra-003:
    image: cassandra:4.1
    container_name: cassandra-003
    hostname: cassandra-003
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: *cassandra_environment
    depends_on:
      cassandra-002:
        condition: service_healthy

  cassandra-004:
    image: cassandra:4.1
    container_name: cassandra-004
    hostname: cassandra-004
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: *cassandra_environment
    depends_on:
      cassandra-003:
        condition: service_healthy

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-001
    hostname: kafka-001
    networks:
      - kafka_cluster
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./grafana
        target: /var/lib/grafana
    networks:
      - cassandra_cluster
