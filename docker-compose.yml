version: "3.8"

networks:
  cassandra_cluster: {}
  kafka_cluster: {}

services:
  cassandra-001:
    image: cassandra:4.1
    container_name: cassandra-001
    hostname: cassandra-001
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: &cassandra_environment    # Save env variables into "environment"
      CASSANDRA_SEEDS: "cassandra-001,cassandra-002"    # The first two nodes will be seeds
      CASSANDRA_CLUSTER_NAME: DataCluster
      CASSANDRA_DC: Local
      CASSANDRA_RACK: One
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128

  cassandra-002:
    image: cassandra:4.1
    container_name: cassandra-002
    hostname: cassandra-002
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: *cassandra_environment
    depends_on:
      cassandra-001:
        condition: service_healthy

  cassandra-003:
    image: cassandra:4.1
    container_name: cassandra-003
    hostname: cassandra-003
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - cassandra_cluster
    environment: *cassandra_environment
    depends_on:
      cassandra-002:
        condition: service_healthy

  cassandra-setup:
    image: cassandra:4.1
    depends_on:
      cassandra-002:
        condition: service_healthy
    networks:
      - cassandra_cluster
    restart: "no"
    entrypoint: [ "cqlsh", "-e", "CREATE KEYSPACE temperature_storage WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 2};", "cassandra-002" ]

  kafka-001:
    image: bitnami/kafka:latest
    container_name: kafka-001
    hostname: kafka-001
    networks:
      - kafka_cluster
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-001:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      cassandra-003:
        condition: service_healthy

  app-001:
    container_name: app-001
    hostname: app-001
    build: .
    networks:
      - kafka_cluster
      - cassandra_cluster
    environment:
      KAFKA_HOST: kafka-001:9092
      CASSANDRA_HOST: cassandra-001,cassandra-002
      SENSOR_FIRST_ID: 1
      SENSOR_NUM: 1000
    depends_on:
      - kafka-001
      - cassandra-setup

  app-002:
    container_name: app-002
    hostname: app-002
    build: .
    networks:
      - kafka_cluster
      - cassandra_cluster
    environment:
      KAFKA_HOST: kafka-001:9092
      CASSANDRA_HOST: cassandra-002,cassandra-003
      SENSOR_FIRST_ID: 1001
      SENSOR_NUM: 1000
    depends_on:
      - kafka-001
      - cassandra-setup

  app-003:
    container_name: app-003
    hostname: app-003
    build: .
    networks:
      - kafka_cluster
      - cassandra_cluster
    environment:
      KAFKA_HOST: kafka-001:9092
      CASSANDRA_HOST: cassandra-001,cassandra-003
      SENSOR_FIRST_ID: 2001
      SENSOR_NUM: 1000
    depends_on:
      - kafka-001

  app-004:
    container_name: app-004
    hostname: app-004
    build: .
    networks:
      - kafka_cluster
      - cassandra_cluster
    environment:
      KAFKA_HOST: kafka-001:9092
      CASSANDRA_HOST: cassandra-001,cassandra-002
      SENSOR_FIRST_ID: 3001
      SENSOR_NUM: 1000
    depends_on:
      - kafka-001
      - cassandra-setup

  app-005:
    container_name: app-005
    hostname: app-005
    build: .
    networks:
      - kafka_cluster
      - cassandra_cluster
    environment:
      KAFKA_HOST: kafka-001:9092
      CASSANDRA_HOST: cassandra-002,cassandra-003
      SENSOR_FIRST_ID: 4001
      SENSOR_NUM: 1000
    depends_on:
      - kafka-001
      - cassandra-setup

  grafana-001:
    image: grafana/grafana-oss:latest
    container_name: grafana-001
    hostname: grafana-001
    ports:
      - "3001:3000"
    volumes:
      - type: bind
        source: ./grafana
        target: /var/lib/grafana
    networks:
      - cassandra_cluster
    depends_on:
      - app-001
      - app-002
      - app-003
      - app-004
      - app-005